{"ast":null,"code":"var _jsxFileName = \"/Users/nathanielcho/Projects/voter-package/components/Comment.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"./Layout\"; // import useSWR from 'swr';\n// function fetcher(url) {\n//   return fetch(url).then(r => r.json());\n// }\n\nfunction Comment(props) {\n  const [comment, setComment] = React.useState(''); // const { data, error } = useSWR('/api/comments', fetcher);\n  // console.log(data)\n  // console.error(error)\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Comments\"), __jsx(\"input\", {\n    onChange: setComment,\n    value: comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport async function getServerSideProps({\n  req,\n  params\n}) {\n  try {\n    console.log('HELLO WORLD');\n    const protocol = req ? `${req.headers['x-forwarded-proto']}:` : location.protocol;\n    const host = req ? req.headers['x-forwarded-host'] : location.host;\n    const commentsURL = `${protocol}//${host}/api/comments?post_id=${params.postId}`;\n    const res = await fetch(commentsURL);\n    const data = await res.json();\n    console.log('HELLO WORLD');\n    return {\n      props: {\n        data\n      }\n    };\n  } catch (e) {\n    console.error(e);\n  }\n}\nexport default Comment;","map":{"version":3,"sources":["/Users/nathanielcho/Projects/voter-package/components/Comment.js"],"names":["fetch","Layout","Comment","props","comment","setComment","React","useState","getServerSideProps","req","params","console","log","protocol","headers","location","host","commentsURL","postId","res","data","json","e","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;AAEA;AACA;AACA;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B,CADsB,CAEtB;AACA;AACA;;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,IAAA,QAAQ,EAAEF,UAAjB;AAA6B,IAAA,KAAK,EAAED,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,OAAO,eAAeI,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAAmD;AACxD,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAMC,QAAQ,GAAGJ,GAAG,GACf,GAAEA,GAAG,CAACK,OAAJ,CAAY,mBAAZ,CAAiC,GADpB,GAEhBC,QAAQ,CAACF,QAFb;AAGA,UAAMG,IAAI,GAAGP,GAAG,GAAGA,GAAG,CAACK,OAAJ,CAAY,kBAAZ,CAAH,GAAqCC,QAAQ,CAACC,IAA9D;AACA,UAAMC,WAAW,GAAI,GAAEJ,QAAS,KAAIG,IAAK,yBAAwBN,MAAM,CAACQ,MAAO,EAA/E;AACA,UAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACiB,WAAD,CAAvB;AACA,UAAMG,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,WAAO;AACLT,MAAAA,KAAK,EAAE;AAAEiB,QAAAA;AAAF;AADF,KAAP;AAGD,GAbD,CAaE,OAAOE,CAAP,EAAU;AACVX,IAAAA,OAAO,CAACY,KAAR,CAAcD,CAAd;AACD;AACF;AAED,eAAepB,OAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Layout from \"./Layout\";\n// import useSWR from 'swr';\n\n// function fetcher(url) {\n//   return fetch(url).then(r => r.json());\n// }\n\nfunction Comment(props) {\n  const [comment, setComment] = React.useState('');\n  // const { data, error } = useSWR('/api/comments', fetcher);\n  // console.log(data)\n  // console.error(error)\n  return (\n    <>\n      <span>Comments</span>\n      <input onChange={setComment} value={comment} />\n    </>\n  );\n}\n\nexport async function getServerSideProps({ req, params }) {\n  try {\n    console.log('HELLO WORLD');\n    const protocol = req\n      ? `${req.headers['x-forwarded-proto']}:`\n      : location.protocol;\n    const host = req ? req.headers['x-forwarded-host'] : location.host;\n    const commentsURL = `${protocol}//${host}/api/comments?post_id=${params.postId}`;\n    const res = await fetch(commentsURL);\n    const data = await res.json();\n    console.log('HELLO WORLD');\n    return {\n      props: { data }\n    };\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}