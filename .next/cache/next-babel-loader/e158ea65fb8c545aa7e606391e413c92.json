{"ast":null,"code":"import _styled from \"@emotion/styled-base\";\nvar _jsxFileName = \"/Users/nathanielcho/Projects/voter-package/components/Vote.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { GoArrowUp } from \"react-icons/go\";\n\nconst Styled = _styled(\"td\", {\n  target: \"ewmgxmf0\",\n  label: \"Styled\"\n})(\"svg{fill:\", props => props.isClicked ? \"black\" : \"#9b9b9b\", \";cursor:pointer;}\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9uYXRoYW5pZWxjaG8vUHJvamVjdHMvdm90ZXItcGFja2FnZS9jb21wb25lbnRzL1ZvdGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSXdCIiwiZmlsZSI6Ii9Vc2Vycy9uYXRoYW5pZWxjaG8vUHJvamVjdHMvdm90ZXItcGFja2FnZS9jb21wb25lbnRzL1ZvdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBHb0Fycm93VXAgfSBmcm9tIFwicmVhY3QtaWNvbnMvZ29cIjtcblxuY29uc3QgU3R5bGVkID0gc3R5bGVkLnRkYFxuICBzdmcge1xuICAgIGZpbGw6ICR7cHJvcHMgPT4gcHJvcHMuaXNDbGlja2VkID8gXCJibGFja1wiIDogXCIjOWI5YjliXCJ9O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuYDtcblxuZnVuY3Rpb24gVm90ZShwcm9wcykge1xuICBjb25zdCBbaXNDbGlja2VkLCBzZXRJc0NsaWNrZWRdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICByZXR1cm4gKFxuICAgIDxTdHlsZWQgaXNDbGlja2VkPXtpc0NsaWNrZWR9PlxuICAgICAgPEdvQXJyb3dVcCBvbkNsaWNrPXsoKSA9PiBzZXRJc0NsaWNrZWQocHJldiA9PiAhcHJldil9IC8+XG4gICAgPC9TdHlsZWQ+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFZvdGU7XG4iXX0= */\"));\n\nfunction Vote(props) {\n  const [isClicked, setIsClicked] = React.useState(false);\n  return __jsx(Styled, {\n    isClicked: isClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(GoArrowUp, {\n    onClick: () => setIsClicked(prev => !prev),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Vote;","map":{"version":3,"sources":["/Users/nathanielcho/Projects/voter-package/components/Vote.js"],"names":["React","GoArrowUp","Styled","props","isClicked","Vote","setIsClicked","useState","prev"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,gBAA1B;;AAEA,MAAMC,MAAM;AAAA;AAAA;AAAA,gBAEAC,KAAK,IAAIA,KAAK,CAACC,SAAN,GAAkB,OAAlB,GAA4B,SAFrC,iiCAAZ;;AAOA,SAASC,IAAT,CAAcF,KAAd,EAAqB;AACnB,QAAM,CAACC,SAAD,EAAYE,YAAZ,IAA4BN,KAAK,CAACO,QAAN,CAAe,KAAf,CAAlC;AACA,SACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEH,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAE,MAAME,YAAY,CAACE,IAAI,IAAI,CAACA,IAAV,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,eAAeH,IAAf","sourcesContent":["import React from 'react';\nimport styled from \"@emotion/styled\";\nimport { GoArrowUp } from \"react-icons/go\";\n\nconst Styled = styled.td`\n  svg {\n    fill: ${props => props.isClicked ? \"black\" : \"#9b9b9b\"};\n    cursor: pointer;\n  }\n`;\n\nfunction Vote(props) {\n  const [isClicked, setIsClicked] = React.useState(false);\n  return (\n    <Styled isClicked={isClicked}>\n      <GoArrowUp onClick={() => setIsClicked(prev => !prev)} />\n    </Styled>\n  );\n}\n\nexport default Vote;\n"]},"metadata":{},"sourceType":"module"}