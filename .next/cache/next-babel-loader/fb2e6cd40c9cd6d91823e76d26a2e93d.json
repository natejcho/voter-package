{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nathanielcho/Projects/voter-package/components/Comment.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"./Layout\"; // import useSWR from 'swr';\n// function fetcher(url) {\n//   return fetch(url).then(r => r.json());\n// }\n\nfunction Comment(props) {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      comment = _React$useState2[0],\n      setComment = _React$useState2[1]; // const { data, error } = useSWR('/api/comments', fetcher);\n  // console.log(data)\n  // console.error(error)\n\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Comments\"), __jsx(\"input\", {\n    onChange: setComment,\n    value: comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport var getServerSideProps = function getServerSideProps(_ref) {\n  var req, params, protocol, host, commentsURL, res, data;\n  return _regeneratorRuntime.async(function getServerSideProps$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req, params = _ref.params;\n          protocol = req ? \"\".concat(req.headers['x-forwarded-proto'], \":\") : location.protocol;\n          host = req ? req.headers['x-forwarded-host'] : location.host;\n          commentsURL = \"\".concat(protocol, \"//\").concat(host, \"/api/comments?post_id=\").concat(params.postId);\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch(commentsURL));\n\n        case 6:\n          res = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 9:\n          data = _context.sent;\n          console.log('data');\n          return _context.abrupt(\"return\", {\n            props: {\n              data: data\n            }\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport default Comment;","map":{"version":3,"sources":["/Users/nathanielcho/Projects/voter-package/components/Comment.js"],"names":["fetch","Layout","Comment","props","React","useState","comment","setComment","getServerSideProps","req","params","protocol","headers","location","host","commentsURL","postId","res","json","data","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;AAEA;AACA;AACA;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,wBACQC,KAAK,CAACC,QAAN,CAAe,EAAf,CADR;AAAA;AAAA,MACfC,OADe;AAAA,MACNC,UADM,wBAEtB;AACA;AACA;;;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,IAAA,QAAQ,EAAEA,UAAjB;AAA6B,IAAA,KAAK,EAAED,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,QAASA,GAAT,EAAcC,MAAd,QAAcA,MAAd;AAC1BC,UAAAA,QAD0B,GACfF,GAAG,aACbA,GAAG,CAACG,OAAJ,CAAY,mBAAZ,CADa,SAEhBC,QAAQ,CAACF,QAHmB;AAI1BG,UAAAA,IAJ0B,GAInBL,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,kBAAZ,CAAH,GAAqCC,QAAQ,CAACC,IAJ9B;AAK1BC,UAAAA,WAL0B,aAKTJ,QALS,eAKIG,IALJ,mCAKiCJ,MAAM,CAACM,MALxC;AAAA;AAAA,2CAMdhB,KAAK,CAACe,WAAD,CANS;;AAAA;AAM1BE,UAAAA,GAN0B;AAAA;AAAA,2CAObA,GAAG,CAACC,IAAJ,EAPa;;AAAA;AAO1BC,UAAAA,IAP0B;AAQhCC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AARgC,2CASzB;AACLlB,YAAAA,KAAK,EAAE;AAAEgB,cAAAA,IAAI,EAAJA;AAAF;AADF,WATyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;AAcP,eAAejB,OAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Layout from \"./Layout\";\n// import useSWR from 'swr';\n\n// function fetcher(url) {\n//   return fetch(url).then(r => r.json());\n// }\n\nfunction Comment(props) {\n  const [comment, setComment] = React.useState('');\n  // const { data, error } = useSWR('/api/comments', fetcher);\n  // console.log(data)\n  // console.error(error)\n  return (\n    <>\n      <span>Comments</span>\n      <input onChange={setComment} value={comment} />\n    </>\n  );\n}\n\nexport const getServerSideProps = async ({ req, params }) => {\n  const protocol = req\n    ? `${req.headers['x-forwarded-proto']}:`\n    : location.protocol\n  const host = req ? req.headers['x-forwarded-host'] : location.host\n  const commentsURL = `${protocol}//${host}/api/comments?post_id=${params.postId}`\n  const res = await fetch(commentsURL);\n  const data = await res.json()\n  console.log('data');\n  return {\n    props: { data }\n  };\n}\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}