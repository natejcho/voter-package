{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nathanielcho/Projects/voter-package/components/Comment.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import fetch from \"isomorphic-unfetch\";\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nfunction Comment(props) {\n  var _useSWR = useSWR('/api/comments?post_id=' + props.postId, fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  console.error(error);\n  data = data || '';\n\n  var _React$useState = React.useState(data.value),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      comment = _React$useState2[0],\n      setComment = _React$useState2[1];\n\n  var updateComment = function updateComment() {\n    fetch('/api/updateComment', {\n      method: 'POST',\n      data: {\n        commentId: props.postId,\n        value: comment\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Comments\"), __jsx(\"input\", {\n    onChange: function onChange(e) {\n      return setComment(e.target.value);\n    },\n    value: comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: updateComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Update\"));\n}\n\nexport default Comment;","map":{"version":3,"sources":["/Users/nathanielcho/Projects/voter-package/components/Comment.js"],"names":["useSWR","fetcher","url","fetch","then","r","json","Comment","props","postId","data","error","console","React","useState","value","comment","setComment","updateComment","method","commentId","e","target"],"mappings":";;;;AAAA;AACA,OAAOA,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACD;;AAED,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,gBACAR,MAAM,CAAC,2BAA2BQ,KAAK,CAACC,MAAlC,EAA0CR,OAA1C,CADN;AAAA,MAChBS,IADgB,WAChBA,IADgB;AAAA,MACVC,KADU,WACVA,KADU;;AAEtBC,EAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAD,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;;AAHsB,wBAIQG,KAAK,CAACC,QAAN,CAAeJ,IAAI,CAACK,KAApB,CAJR;AAAA;AAAA,MAIfC,OAJe;AAAA,MAINC,UAJM;;AAMtB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1Bf,IAAAA,KAAK,CAAC,oBAAD,EAAuB;AAC1BgB,MAAAA,MAAM,EAAE,MADkB;AAE1BT,MAAAA,IAAI,EAAE;AACJU,QAAAA,SAAS,EAAEZ,KAAK,CAACC,MADb;AAEJM,QAAAA,KAAK,EAAEC;AAFH;AAFoB,KAAvB,CAAL;AAOD,GARD;;AAWA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,IAAA,QAAQ,EAAE,kBAACK,CAAD;AAAA,aAAOJ,UAAU,CAACI,CAAC,CAACC,MAAF,CAASP,KAAV,CAAjB;AAAA,KAAjB;AAAoD,IAAA,KAAK,EAAEC,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF;AAOD;;AAED,eAAeX,OAAf","sourcesContent":["// import fetch from \"isomorphic-unfetch\";\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nfunction Comment(props) {\n  let { data, error } = useSWR('/api/comments?post_id=' + props.postId, fetcher);\n  console.error(error);\n  data = data || ''\n  const [comment, setComment] = React.useState(data.value);\n\n  const updateComment = () => {\n    fetch('/api/updateComment', {\n      method: 'POST',\n      data: {\n        commentId: props.postId,\n        value: comment\n      }\n    })\n  }\n\n\n  return (\n    <>\n      <span>Comments</span>\n      <input onChange={(e) => setComment(e.target.value)} value={comment} />\n      <button onClick={updateComment}>Update</button>\n    </>\n  );\n}\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}