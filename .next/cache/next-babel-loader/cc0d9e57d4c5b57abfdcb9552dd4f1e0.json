{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/nathanielcho/Projects/voter-package/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { INTRODUCED_BILLS_URL } from '../utils/constants';\nimport Card from \"../components/Card\";\nvar tempData = [{\n  title: \"To amend the Public Health Service Act to authorize the expansion of activities related to Alzheimer's disease, cognitive decline, and brain health under the Alzheimer's Disease and Healthy Aging Program, and for other purposes.\",\n  points: 0,\n  sponsor_name: \"Brett Guthrie\",\n  latest_major_action_date: \"2017-11-06\",\n  comments: []\n}];\n\nfunction Index(props) {\n  var _this = this;\n\n  return __jsx(React.Fragment, null, tempData.map(function (card, index) {\n    return __jsx(Card, _extends({\n      key: index\n    }, card, {\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }));\n  }));\n}\n\nIndex.getInitialProps = function _callee() {\n  var res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(INTRODUCED_BILLS_URL, {\n            headers: 'X-API-Key: PROPUBLICA_API_KEY'\n          }));\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/nathanielcho/Projects/voter-package/pages/index.js"],"names":["fetch","INTRODUCED_BILLS_URL","Card","tempData","title","points","sponsor_name","latest_major_action_date","comments","Index","props","map","card","index","getInitialProps","headers","res","shows","data","entry","show"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,IAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,KAAK,EACH,sOAFJ;AAGEC,EAAAA,MAAM,EAAE,CAHV;AAIEC,EAAAA,YAAY,EAAE,eAJhB;AAKEC,EAAAA,wBAAwB,EAAE,YAL5B;AAMEC,EAAAA,QAAQ,EAAE;AANZ,CADe,CAAjB;;AAWA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,SACE,4BACGP,QAAQ,CAACQ,GAAT,CAAa,UAACC,IAAD,EAAOC,KAAP;AAAA,WACZ,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA;AAAX,OAAsBD,IAAtB;AAA4B,MAAA,KAAK,EAAEC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADY;AAAA,GAAb,CADH,CADF;AAOD;;AAEDJ,KAAK,CAACK,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJd,KAAK,CAACC,oBAAD,EAAuB;AAC5Cc,YAAAA,OAAO,EAAE;AADmC,WAAvB,CADD;;AAAA;AAChBC,UAAAA,GADgB;AAAA,2CAKf;AACLC,YAAAA,KAAK,EAAEC,IAAI,CAACP,GAAL,CAAS,UAAAQ,KAAK;AAAA,qBAAIA,KAAK,CAACC,IAAV;AAAA,aAAd;AADF,WALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAUA,eAAeX,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport { INTRODUCED_BILLS_URL } from '../utils/constants';\nimport Card from \"../components/Card\";\n\nconst tempData = [\n  {\n    title:\n      \"To amend the Public Health Service Act to authorize the expansion of activities related to Alzheimer's disease, cognitive decline, and brain health under the Alzheimer's Disease and Healthy Aging Program, and for other purposes.\",\n    points: 0,\n    sponsor_name: \"Brett Guthrie\",\n    latest_major_action_date: \"2017-11-06\",\n    comments: [],\n  },\n];\n\nfunction Index(props) {\n  return (\n    <>\n      {tempData.map((card, index) => (\n        <Card key={index} {...card} index={index} />\n      ))}\n    </>\n  );\n}\n\nIndex.getInitialProps = async function () {\n  const res = await fetch(INTRODUCED_BILLS_URL, {\n    headers: 'X-API-Key: PROPUBLICA_API_KEY',\n  });\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}