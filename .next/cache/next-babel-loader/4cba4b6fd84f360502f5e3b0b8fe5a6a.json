{"ast":null,"code":"import db from '../../lib/db';\n\nconst getComment = async (req, res) => {\n  const post_id = req.query;\n  console.log('getting comments for ' + post_id);\n\n  try {\n    const doc = await db.collection('comments').doc(post_id).get();\n\n    if (!doc.exists) {\n      db.collection('comments').doc(post_id);\n      getComment(res, post_id);\n    } else {\n      res.status(200).json({\n        data: doc.data()\n      });\n    }\n  } catch (error) {\n    console.log('Error getting comments', error);\n    res.json({\n      error\n    });\n  } // db.collection('comments').doc(id).get()\n  //   .then((doc) => {\n  // })\n  // .catch((error) => {\n  //   console.log('Error getting comments', error);\n  //   res.json({ error })\n  // });\n\n};\n\nexport default getComment;","map":{"version":3,"sources":["/Users/nathanielcho/Projects/voter-package/pages/api/comments.js"],"names":["db","getComment","req","res","post_id","query","console","log","doc","collection","get","exists","status","json","data","error"],"mappings":"AAAA,OAAOA,EAAP,MAAe,cAAf;;AAEA,MAAMC,UAAU,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACrC,QAAMC,OAAO,GAAGF,GAAG,CAACG,KAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BH,OAAtC;;AACA,MAAI;AACF,UAAMI,GAAG,GAAG,MAAMR,EAAE,CAACS,UAAH,CAAc,UAAd,EAA0BD,GAA1B,CAA8BJ,OAA9B,EAAuCM,GAAvC,EAAlB;;AACA,QAAI,CAACF,GAAG,CAACG,MAAT,EAAiB;AACfX,MAAAA,EAAE,CAACS,UAAH,CAAc,UAAd,EAA0BD,GAA1B,CAA8BJ,OAA9B;AACAH,MAAAA,UAAU,CAACE,GAAD,EAAMC,OAAN,CAAV;AACD,KAHD,MAGO;AACLD,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,IAAI,EAAEN,GAAG,CAACM,IAAJ;AAAR,OAArB;AACD;AACF,GARD,CAQE,OAAOC,KAAP,EAAc;AACdT,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCQ,KAAtC;AACAZ,IAAAA,GAAG,CAACU,IAAJ,CAAS;AAAEE,MAAAA;AAAF,KAAT;AACD,GAdoC,CAerC;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CAtBD;;AAwBA,eAAed,UAAf","sourcesContent":["import db from '../../lib/db';\n\nconst getComment = async (req, res) => {\n  const post_id = req.query;\n  console.log('getting comments for ' + post_id);\n  try {\n    const doc = await db.collection('comments').doc(post_id).get();\n    if (!doc.exists) {\n      db.collection('comments').doc(post_id);\n      getComment(res, post_id);\n    } else {\n      res.status(200).json({ data: doc.data() });\n    }\n  } catch (error) {\n    console.log('Error getting comments', error);\n    res.json({ error })\n  }\n  // db.collection('comments').doc(id).get()\n  //   .then((doc) => {\n  // })\n  // .catch((error) => {\n  //   console.log('Error getting comments', error);\n  //   res.json({ error })\n  // });\n}\n\nexport default getComment;"]},"metadata":{},"sourceType":"module"}